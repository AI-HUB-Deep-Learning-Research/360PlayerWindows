//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlayerUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PlayerUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End User License Agreement
        ///
        ///The present agreement constitutes a legally binding agreement between the Licensee and KOLOR, a sole-proprietor limited liability company with a capital of 8.000,00 €, the head office of which is situated at 73800 FRANCIN (FRANCE), 112 Voie Albert Einstein, registered in the CHAMBERY trade register under reference 479 247 751, represented by Mr. Alexandre JENNY, Executive Manager, in accordance with the law and current company articles, domiciled in this function at the aforeme [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EULA {
            get {
                return ResourceManager.GetString("EULA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third party components:
        ///
        ///SharpDX 2.6.3 is under the MIT license.
        ///Caliburn Micro 2.0.1 is under the MIT license.
        ///HTML Agility Pack 1.4.9 is under the Microsoft Public License (Ms-PL).
        ///Newtonsoft Json 6.0 is under the MIT license.
        ///RestSharp 105.0.1 is under the Apache License Version 2.0.
        ///SharpVectors 1.0 is under the New BSD License (BSD).
        ///OculusWrap 1.6.0.2 is under the Microsoft Public License (Ms-PL).
        ///Nancy 1.2 and Nancy.Hosting.Self 1.2 are under the MIT license.
        ///Fleck 0.13.0.57 is under the MI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EulaLibs {
            get {
                return ResourceManager.GetString("EulaLibs", resourceCulture);
            }
        }
    }
}
